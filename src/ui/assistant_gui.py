# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'assistant_interface.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from .mic_settings_interface import Ui_MicSettingsWindow
from ..config.config import ModuleLoader
from ..interfaces.sr import SpeechRecognizer
from ..interfaces.ss import SpeechSynthesizer


class AssistantGUI(object):
    def __init__(self, module_loader: ModuleLoader, backend):
        super().__init__()
        self.__module_loader = module_loader
        self.__recognizer: SpeechRecognizer = self.__module_loader.load_base_module("sr")
        self.__synthesizer: SpeechSynthesizer = self.__module_loader.load_base_module("ss")
        self.__backend = backend
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        #Chat display area
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(0, 20, 801, 521))
        self.textBrowser.setObjectName("textBrowser")
        #Text area
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(0, 540, 721, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit.returnPressed.connect(self.send_text_message)
        #Send text button
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(720, 540, 41, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.send_text_message)
        #Speak button
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(760, 540, 41, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.send_voice_message)
        #Checkbox for enabling speech output
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(0, 0, 131, 17))
        self.checkBox.setObjectName("checkBox")
        MainWindow.setCentralWidget(self.centralwidget)
        #Menu bar for settings
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionMicrophone_Settings = QtWidgets.QAction(MainWindow)
        self.actionMicrophone_Settings.setObjectName("actionMicrophone_Settings")
        self.actionMicrophone_Settings.triggered.connect(self.open_mic_settings)
        self.menuSettings.addAction(self.actionMicrophone_Settings)
        self.menubar.addAction(self.menuSettings.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Digital Assistant"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "Type your message here..."))
        self.pushButton.setText(_translate("MainWindow", "Send"))
        self.pushButton_2.setText(_translate("MainWindow", "Speak"))
        self.checkBox.setText(_translate("MainWindow", "Enable Speech Output"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.actionMicrophone_Settings.setText(_translate("MainWindow", "Microphone Settings"))

    def open_mic_settings(self):
        self.mic_settings_window = QtWidgets.QDialog()
        self.mic_settings_ui = Ui_MicSettingsWindow(self.__recognizer)
        self.mic_settings_ui.setupUi(self.mic_settings_window)
        self.mic_settings_window.exec_()


    def send_text_message(self):
        user_text = self.lineEdit.text().strip()
        self.send_message(user_text)


    def send_voice_message(self):
        spoken_text = self.__recognizer.recognize_speech()
        self.send_message(spoken_text)

    def send_message(self, user_message):
        if user_message:
            self.update_chat(f"User -> {user_message}")
            self.lineEdit.clear()
            response = self.__backend.handle_user_message(user_message)
            self.update_chat(f"DA -> {response}")
            self.say_text(response)
    
    def update_chat(self, message):
        self.textBrowser.append(message)

    def say_text(self, text):
        if self.checkBox.isChecked():
            self.__synthesizer.synthesize_speech(text)



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = AssistantGUI()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
