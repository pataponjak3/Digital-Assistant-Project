# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mic_settings_interface.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QDialog
from interfaces.sr_interface import SpeechRecognizer


class MicSettingsWindow(object):
    def __init__(self, speech_recognition_module: SpeechRecognizer):
        super().__init__()
        self.__recognizer = speech_recognition_module

    def setupUi(self, MicSettingsWindow: QDialog):
        MicSettingsWindow.setObjectName("MicSettingsWindow")
        MicSettingsWindow.resize(350, 100)
        self.gridLayout = QtWidgets.QGridLayout(MicSettingsWindow)
        self.gridLayout.setObjectName("gridLayout")
        self.labelMicrophone = QtWidgets.QLabel(MicSettingsWindow)
        self.labelMicrophone.setObjectName("labelMicrophone")
        self.gridLayout.addWidget(self.labelMicrophone, 1, 0, 1, 1)
        self.buttonBox = QtWidgets.QDialogButtonBox(MicSettingsWindow)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Apply)
        self.buttonBox.setObjectName("buttonBox")
        self.gridLayout.addWidget(self.buttonBox, 4, 0, 1, 1)
        self.comboBoxMicrophone = QtWidgets.QComboBox(MicSettingsWindow)
        self.comboBoxMicrophone.setObjectName("comboBoxMicrophone")
        self.gridLayout.addWidget(self.comboBoxMicrophone, 2, 0, 1, 1)

        self.__populate_microphone_list()
        self.buttonBox.clicked.connect(lambda: self.__apply_microphone_selection(MicSettingsWindow))  # type: ignore

        self.__retranslateUi(MicSettingsWindow)
        self.buttonBox.accepted.connect(MicSettingsWindow.accept) # type: ignore
        self.buttonBox.rejected.connect(MicSettingsWindow.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MicSettingsWindow)

    def __retranslateUi(self, MicSettingsWindow: QDialog):
        _translate = QtCore.QCoreApplication.translate
        MicSettingsWindow.setWindowTitle(_translate("MicSettingsWindow", "Microphone Settings"))
        self.labelMicrophone.setText(_translate("MicSettingsWindow", "Select Microphone:"))

    def __populate_microphone_list(self):
        microphones = self.__recognizer.list_microphones()
        self.comboBoxMicrophone.clear()
        for index, mic in microphones.items():
            self.comboBoxMicrophone.addItem(f"{index}: {mic}", index)
    
    def __apply_microphone_selection(self, MicSettingsWindow: QDialog):
        selected_index = self.comboBoxMicrophone.currentData()
        self.__recognizer.select_microphone(selected_index)
        QtWidgets.QMessageBox.information(MicSettingsWindow, "Microphone Selected", f"Microphone {selected_index} selected!")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MicSettingsWindow = QtWidgets.QDialog()
    ui = MicSettingsWindow()
    ui.setupUi(MicSettingsWindow)
    MicSettingsWindow.show()
    sys.exit(app.exec_())
